Hello, my name is Sean Gordon, and I will be talking about our projectâ€™s functional requirements. 

The bulk of our project focuses on designing addons to the existing Sisyphus table. These interfaces must build off the existing physical components of the table without requiring any customer intervention or, if more control is required, any physical components added to the table must be inexpensive, discrete, and easy to install. The software applications for this project will be housed in an interface hosted both on the web and in a smartphone app. The majority of the applications revolve around tracks for the table, giving customers much more accessibility to their existing product.

The backbone of the majority of the applications is a converter between coordinate types. As the table can only read track files written in polar coordinates but the vast majority of people prefer working in the cartesian coordinate plane, we thought it pertinent to build a converter between these two types of coordinate planes. This is used in much of the application, converting the results from the easier to use graphical interfaces into something the table itself can use. This converter must take in an ordered series of cartesian coordinates in a file, and convert it to a correctly formatted series of polar coordinates for the table.

On top of simply converting track coordinate types, the application will enable custom track design in several ways. The most straightforward of these is a digital drawing pad, where a user has absolute control over every grain of sand on the table. This must take user input as a series of lines drawn on the screen, and convert it to an ordered series of cartesian coordinates. These coordinates must then automatically be run through our converter to create a valid track.

Another function of the application will be to convert an image into a valid track. This function must intake an image of any type and resolution and allow the user to select what section of the image is to be converted. The function must then determine the most prominent aspects of the image and the order with which they must be layered, then convert these calculations into a cartesian coordinate file. This resulting file must then be run through our converter to create a valid track.

On top of enabling the creation of custom tracks, this application must also be able to send the tracks to the table itself. At this point in the project, it is uncertain whether this can be done using the preexisting wireless functionality of the table, or if further physical components must be added. This function must take an existing polar coordinate track file and transmit it to the correct Sisyphus table.

The interface will also allow users to share tracks with each other wirelessly. If they are connected to the internet, the user must be able to securely upload a track to our databases, change any information such as the name and who is able to access it, then post it to be displayed online. A different user must then be able to find the uploaded track in the listings and securely download the file to their device. This file should then be able to be sent to their personal table. A user must also be able to rate a given track, and can search for tracks in the listings using filters such as name, size, and rating.

This functionality must all fit inside a neatly packaged application usable on a smartphone or the web. All functionality must be accessible through a graphical interface, with all functionality accessible in a tree from the main menu. This must be downloadable to a smartphone as a typical app, or accessible through a url and a valid account for full access to all functionality.
